name: Deploy React Frontend
on:
  push:
    branches:
      - main
permissions:
  id-token: write
  contents: read
jobs:
  deploy-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::093207963200:role/git-hub-oidc
          aws-region: us-east-1
      
      - name: Run deployment commands on EC2 via SSM
        run: |
          DEPLOY_COMMAND_ID=$(aws ssm send-command \
            --targets "Key=InstanceIds,Values=i-01579d8c01a88318f" \
            --document-name "AWS-RunShellScript" \
            --comment "Deploy FastAPI Backend" \
            --parameters 'commands=[
              "#!/bin/bash",
              "set -e",
              "echo \"Starting deployment at $(date)\"",
              "cd ~/fastapi",
              "echo \"Current directory: $(pwd)\"",
              "PIDS=$(pgrep -f uvicorn || true)",
              "if [ -n \"$PIDS\" ]; then echo \"Killing existing processes: $PIDS\"; sudo kill -9 $PIDS; sleep 3; fi",
              "echo \"Updating code...\"",
              "git fetch -p",
              "git pull origin main",
              "echo \"Installing requirements using venv pip...\"",
              "venv/bin/pip install -r requirements.txt",
              "echo \"Starting FastAPI server using venv python...\"",
              "nohup venv/bin/uvicorn main:app --host 0.0.0.0 --port 8000 --forwarded-allow-ips=\"*\" > app.log 2>&1 &",
              "sleep 10",
              "echo \"Checking if server started...\"",
              "if pgrep -f uvicorn > /dev/null; then echo \"✅ Server started successfully with PID: $(pgrep -f uvicorn)\"; else echo \"❌ Server failed to start\"; tail -20 app.log; exit 1; fi"
            ]' \
            --query 'Command.CommandId' \
            --output text)
          
          echo "Deployment Command ID: $DEPLOY_COMMAND_ID"
          sleep 25
          
          echo "=== DEPLOYMENT RESULTS ==="
          aws ssm get-command-invocation \
            --command-id $DEPLOY_COMMAND_ID \
            --instance-id i-01579d8c01a88318f \
            --query 'StandardOutputContent' \
            --output text
          
          echo "=== DEPLOYMENT ERRORS (if any) ==="
          aws ssm get-command-invocation \
            --command-id $DEPLOY_COMMAND_ID \
            --instance-id i-01579d8c01a88318f \
            --query 'StandardErrorContent' \
            --output text
      
      - name: Verify deployment status
        run: |
          # Wait for command to complete and get command ID
          COMMAND_ID=$(aws ssm send-command \
            --targets "Key=InstanceIds,Values=i-01579d8c01a88318f" \
            --document-name "AWS-RunShellScript" \
            --comment "Check FastAPI Status" \
            --parameters 'commands=[
              "sleep 10",
              "pgrep -f uvicorn || echo \"Process not found\"",
              "curl -f http://localhost:8000/health || curl -f http://localhost:8000/ || echo \"Health check failed\"",
              "tail -20 ~/fastapi/app.log"
            ]' \
            --query 'Command.CommandId' \
            --output text)
          
          # Wait for command completion
          sleep 15
          
          # Get command results
          aws ssm get-command-invocation \
            --command-id $COMMAND_ID \
            --instance-id i-01579d8c01a88318f \
            --query 'StandardOutputContent' \
            --output text
      
